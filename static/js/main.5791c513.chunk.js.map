{"version":3,"sources":["components/Stars/Star/Star.js","components/Stars/Stars.js","components/Listing/Listing.js","components/MessageHistory/Message/Message.js","components/MessageHistory/Response/Response.js","components/MessageHistory/Typing/Typing.js","components/MessageHistory/MessageHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Star","fill","height","viewBox","width","xmlns","d","Stars","arr","count","i","push","generateStar","className","map","item","uuidv4","defaultProps","currencyPrice","price","currency","levelClass","quantity","Listing","items","itemsArr","length","listing_id","url","MainImage","title","currency_code","href","src","url_570xN","alt","substring","Message","from","time","text","name","Response","Typing","MessageHistory","list","listArr","id","type","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5791c513.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Star() {\n  return (\n    <li>\n      <svg\n        fill=\"#D3BCA2\"\n        height=\"28\"\n        viewBox=\"0 0 18 18\"\n        width=\"28\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M9 11.3l3.71 2.7-1.42-4.36L15 7h-4.55L9 2.5 7.55 7H3l3.71 2.64L5.29 14z\" />\n        <path d=\"M0 0h18v18H0z\" fill=\"none\" />\n      </svg>\n    </li>\n  );\n}\n\nexport default Star;\n","import React from \"react\";\nimport Star from \"./Star/Star\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nfunction generateStar(count) {\n  const arr = [];\n  if (count > 0 && count < 6) {\n    for (let i = 0; i < count; i++) {\n      arr.push(i);\n    }\n  }\n  return arr;\n}\n\nfunction Stars({ count }) {\n  const arr = generateStar(count);\n  return (\n    <ul className={\"card-body-stars u-clearfix\"}>\n      {arr.map((item) => (\n        <Star key={uuidv4(item)} />\n      ))}\n    </ul>\n  );\n}\nStars.propTypes = {\n  count: PropTypes.number,\n};\nStars.defaultProps = {\n  count: 0,\n};\nexport default Stars;\n","import \"./desktop.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction currencyPrice(price, currency) {\n  if (price && currency) {\n    if (currency === \"USD\") {\n      return `$${price}`;\n    } else if (currency === \"EUR\") {\n      return `€${price}`;\n    } else {\n      return `${price} ${currency}`;\n    }\n  }\n}\n\nfunction levelClass(quantity) {\n  if (quantity < 11) {\n    return \"level-low\";\n  } else if (quantity > 10 && quantity < 21) {\n    return \"level-medium\";\n  } else if (quantity > 20) {\n    return \"level-high\";\n  }\n}\n\nfunction Listing({ items }) {\n  let itemsArr = [];\n  if (items.length > 0) {\n    itemsArr = items;\n  } else {\n    itemsArr = null;\n  }\n  return (\n    itemsArr && (\n      <div className=\"item-list\">\n        {itemsArr.map((item) => {\n          const {\n            listing_id,\n            url,\n            MainImage,\n            title,\n            currency_code,\n            price,\n            quantity,\n          } = item;\n\n          return (\n            title && (\n              <div key={listing_id} className=\"item\">\n                <div className=\"item-image\">\n                  <a href={url}>\n                    <img\n                      src={MainImage ? MainImage.url_570xN : null}\n                      alt={title ? title : \"foto\"}\n                    />\n                  </a>\n                </div>\n                <div className=\"item-details\">\n                  <p className=\"item-title\">\n                    {title.length > 51\n                      ? `${title.substring(0, 50)} ...`\n                      : title}\n                  </p>\n                  <p className=\"item-price\">\n                    {currencyPrice(price, currency_code)}\n                  </p>\n                  <p className={`item-quantity ${levelClass(quantity)}`}>\n                    {quantity}\n                  </p>\n                </div>\n              </div>\n            )\n          );\n        })}\n      </div>\n    )\n  );\n}\n\nListing.propTypes = {\n  items: PropTypes.array,\n};\nListing.defaultProps = {\n  items: [],\n};\nexport default Listing;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Message({ from, item }) {\n  const { time, text } = item;\n\n  return (\n    <li className=\"clearfix\">\n      <div className=\"message-data align-right\">\n        <span className=\"message-data-time\">{time}</span> &nbsp; &nbsp;\n        <span className=\"message-data-name\">{from.name}</span>\n        <i className=\"fa fa-circle me\"></i>\n      </div>\n      <div className=\"message other-message float-right\">\n        {text ? text : null}\n      </div>\n    </li>\n  );\n}\n\nMessage.propTypes = {\n  from: PropTypes.object,\n  item: PropTypes.object,\n};\nMessage.defaultProps = {\n  from: { name: \"Виктор\" },\n  item: {\n    time: \"10\",\n    text: \"Нет\",\n  },\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Response({ from, item }) {\n  const { time, text } = item;\n\n  return (\n    <li>\n      <div className=\"message-data\">\n        <span className=\"message-data-name\">\n          <i className=\"fa fa-circle online\"></i> {from.name}\n        </span>\n        <span className=\"message-data-time\">{time}</span>\n      </div>\n      <div className=\"message my-message\">{text ? text : null}</div>\n    </li>\n  );\n}\n\nResponse.propTypes = {\n  from: PropTypes.object,\n  item: PropTypes.object,\n};\nResponse.defaultProps = {\n  from: { name: \"Виктор\" },\n  item: {\n    time: \"10\",\n    text: \"Нет\",\n  },\n};\nexport default Response;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Typing({ from, item }) {\n  const { time, text } = item;\n\n  return (\n    <li className=\"clearfix\">\n      <div className=\"message-data align-right\">\n        <span className=\"message-data-time\">{time}</span> &nbsp; &nbsp;\n        <span className=\"message-data-name\">{from.name}</span>\n        <i className=\"fa fa-circle me\"></i>\n      </div>\n      {text && (\n        <div className=\"message other-message float-right\">\n          {text ? text : null}\n        </div>\n      )}\n    </li>\n  );\n}\n\nTyping.propTypes = {\n  from: PropTypes.object,\n  item: PropTypes.object,\n};\nTyping.defaultProps = {\n  from: { name: \"Виктор\" },\n  item: {\n    time: \"10\",\n    text: \"Нет\",\n  },\n};\nexport default Typing;\n","import \"./desktop.scss\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport Response from \"./Response/Response\";\nimport Typing from \"./Typing/Typing\";\n\nfunction MessageHistory({ list }) {\n  let listArr = [];\n  if (list.length > 0) {\n    listArr = list;\n  } else {\n    listArr = null;\n  }\n  return (\n    listArr && (\n      <ul>\n        {listArr.map((item) => {\n          const { from, id, type } = item;\n          if (type === \"message\") {\n            return <Message key={id} from={from} item={item} />;\n          } else if (type === \"response\") {\n            return <Response key={id} from={from} item={item} />;\n          } else if (type === \"typing\") {\n            return <Typing key={id} from={from} item={item} />;\n          } else {\n            return null;\n          }\n        })}\n      </ul>\n    )\n  );\n}\n\nexport default MessageHistory;\n","import \"./App.css\";\nimport Stars from \"./components/Stars/Stars\";\nimport Listing from \"./components/Listing/Listing\";\nimport MessageHistory from \"./components/MessageHistory/MessageHistory\";\nimport data from \"./etsy.json\";\nimport list from \"./list.json\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <Stars count={4} />\n        <Listing items={data} />\n      </div>\n      <div className=\"clearfix container\">\n        <div className=\"chat\">\n          <div className=\"chat-history\">\n            <MessageHistory list={list} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}